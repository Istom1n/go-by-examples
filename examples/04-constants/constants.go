////
// Go поддерживает _константы_ для строк, булевых значений,
// и числительных значений.
////

package main

import "fmt"
import "math"

// `const` объявляет константное значение.
const s string = "constant"

func main() {
	fmt.Println(s)

	// Модификатор `const` может появляться
	// где-либо, также как и оператор `var`.
	const n = 500000000

	// Константные выражения выполняют
	// арифметические действия с произвольной
	// точностью.
	const d = 3e20 / n
	fmt.Println(d)

	// Числовая константа не имеет типа до тех
	// пор, пока не будет задана одна, например,
	// с помощью явного приведения типов.
	fmt.Println(int64(d))

	// Число может быть присвоено типу, используя его
	// в контексте, который требует одного, или
	// назначение переменной или вызов функции. Например,
	// здесь `math.Sin` ожидает` float64`.
	fmt.Println(math.Sin(n))
}

// --- --- --- --- ---

// $ go run constant.go
// constant
// 6e+11
// 600000000000
// -0.28470407323754404
