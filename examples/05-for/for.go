////
// `for` это оператор языка Go только цикловую конструкцию.
// Вот три основных типа циклов `for`.
////

package main

import "fmt"

func main() {

	// Самый простой тип, с одним условием.
	i := 1
	for i <= 3 {
		fmt.Println(i)
		i = i + 1
	}

	// Классическое начальное/условие/после цикла `for`.
	for j := 7; j <= 9; j++ {
		fmt.Println(j)
	}

	// `for` без условия будет циклически повторяться
	// до тех пор, пока вы не используете оператор
	// `break` (вырваться) из цикла или `return` из
	// закрывающей функции.
	for {
		fmt.Println("loop")
		break
	}

	// Вы также можете `continue` (продолжить) следующую итерацию цикла.
	for n := 0; n <= 5; n++ {
		if n%2 == 0 {
			continue
		}
		fmt.Println(n)
	}
}

// --- --- --- --- ---

// $ go run for.go
// 1
// 2
// 3
// 7
// 8
// 9
// loop
// 1
// 3
// 5

// Мы увидим некоторые другие формы `for` позже, когда мы посмотрим
// на выражения `range`, channels (каналы) и другие структуры данных.
